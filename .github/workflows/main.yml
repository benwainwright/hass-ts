name: Main CI

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run unit tests
    strategy:
      fail-fast: false
      matrix:
        node-version: ["18.x", "20.x", "21.x"]
    steps:
      - uses: actions/checkout@v3
      - name: Setup job
        uses: ./.github/actions/install-dependencies
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm run test

  e2e-test:
    runs-on: ubuntu-latest
    name: Run E2E tests
    steps:
      - uses: actions/checkout@v3
      - name: Setup job
        uses: ./.github/actions/install-dependencies
      - run: npm run test:e2e
        env:
          RTM_API_KEY: ${{ secrets.RTM_API_KEY }}
          RTM_API_SECRET: ${{ secrets.RTM_API_SECRET }}

  checks:
    runs-on: ubuntu-latest
    name: Run static checks
    strategy:
      fail-fast: false
      matrix:
        check: [api, build, lint]

    steps:
      - uses: actions/checkout@v3
      - name: Setup job
        uses: ./.github/actions/install-dependencies
      - run: npm run ${{ matrix.check }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, checks, e2e-test]

    steps:
      - uses: actions/checkout@v3
      - name: Setup job
        uses: ./.github/actions/install-dependencies

      - name: Generate API
        run: npm run api

      - name: Build Package
        run: npm run build

      - name: Generate Documentation
        run: npm run docs

      - name: Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3.4.0
        env:
          HUSKY: 0
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

  e2e-test-post-release:
    runs-on: ubuntu-latest
    name: Run Post-release E2E tests
    needs: [release]
    if: needs.release.outputs.new_release_published	== 'true'
    steps:
      - uses: actions/checkout@v3
      - name: Setup job
        uses: ./.github/actions/install-dependencies
      - run: npm run test:e2e:post-release
        env:
          RTM_API_KEY: ${{ secrets.RTM_API_KEY }}
          RTM_API_SECRET: ${{ secrets.RTM_API_SECRET }}

  rollback-release:
    runs-on: ubuntu-latest
    name: Check test results and unpublish if failed
    if: always()
    needs: [e2e-test-post-release, release]
    steps:
      - uses: actions/checkout@v3
      - name: Setup job
        if: needs.e2e-test-post-release.result == 'failure'
        uses: ./.github/actions/install-dependencies

      - run: npm unpublish rtm-typescript@${{ needs.release.outputs.new_release_version }}
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: needs.e2e-test-post-release.result == 'failure'
